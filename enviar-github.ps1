# Script para enviar o Sistema Animed ao GitHub
# Execute como administrador se necess√°rio

Write-Host "üöÄ Iniciando processo de envio ao GitHub..." -ForegroundColor Green

# Verificar se Git est√° instalado
try {
    $gitVersion = git --version
    Write-Host "‚úÖ Git encontrado: $gitVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Git n√£o encontrado. Instale em: https://git-scm.com/download/win" -ForegroundColor Red
    exit 1
}

# Verificar se estamos na pasta correta
if (-not (Test-Path "package.json")) {
    Write-Host "‚ùå Execute este script na pasta raiz do projeto Animed" -ForegroundColor Red
    exit 1
}

Write-Host "üìÅ Pasta do projeto encontrada!" -ForegroundColor Green

# Inicializar Git se n√£o existir
if (-not (Test-Path ".git")) {
    Write-Host "üîß Inicializando reposit√≥rio Git..." -ForegroundColor Yellow
    git init
    Write-Host "‚úÖ Reposit√≥rio Git inicializado!" -ForegroundColor Green
} else {
    Write-Host "‚úÖ Reposit√≥rio Git j√° existe!" -ForegroundColor Green
}

# Verificar configura√ß√£o do Git
$userName = git config user.name
$userEmail = git config user.email

if (-not $userName -or -not $userEmail) {
    Write-Host "‚ö†Ô∏è  Configure o Git primeiro:" -ForegroundColor Yellow
    Write-Host "git config --global user.name 'Seu Nome'" -ForegroundColor Cyan
    Write-Host "git config --global user.email 'seu.email@exemplo.com'" -ForegroundColor Cyan
    Write-Host ""
    Write-Host "Depois execute este script novamente." -ForegroundColor Yellow
    exit 1
}

Write-Host "‚úÖ Git configurado: $userName <$userEmail>" -ForegroundColor Green

# Adicionar arquivos
Write-Host "üì¶ Adicionando arquivos ao Git..." -ForegroundColor Yellow
git add .

# Verificar se h√° mudan√ßas para commit
$status = git status --porcelain
if (-not $status) {
    Write-Host "‚ÑπÔ∏è  Nenhuma mudan√ßa para commitar." -ForegroundColor Blue
} else {
    Write-Host "üíæ Fazendo commit das mudan√ßas..." -ForegroundColor Yellow
    git commit -m "feat: Sistema Animed - Sistema veterin√°rio completo com conformidade LGPD"
    Write-Host "‚úÖ Commit realizado!" -ForegroundColor Green
}

# Verificar se remote origin existe
$remoteOrigin = git remote get-url origin 2>$null
if ($remoteOrigin) {
    Write-Host "‚úÖ Remote origin configurado: $remoteOrigin" -ForegroundColor Green
} else {
    Write-Host "‚ö†Ô∏è  Remote origin n√£o configurado!" -ForegroundColor Yellow
    Write-Host ""
    Write-Host "üìã Para configurar o remote origin:" -ForegroundColor Cyan
    Write-Host "1. Crie um reposit√≥rio no GitHub" -ForegroundColor White
    Write-Host "2. Execute: git remote add origin https://github.com/SEU-USUARIO/SEU-REPOSITORIO.git" -ForegroundColor White
    Write-Host "3. Execute: git push -u origin main" -ForegroundColor White
    Write-Host ""
    Write-Host "Ou execute este script novamente ap√≥s configurar o remote." -ForegroundColor Yellow
    exit 0
}

# Enviar para GitHub
Write-Host "üöÄ Enviando para o GitHub..." -ForegroundColor Yellow
try {
    git push -u origin main
    Write-Host "‚úÖ C√≥digo enviado com sucesso para o GitHub!" -ForegroundColor Green
    Write-Host "üåê Acesse seu reposit√≥rio no GitHub para ver o resultado!" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro ao enviar para o GitHub:" -ForegroundColor Red
    Write-Host $_.Exception.Message -ForegroundColor Red
    Write-Host ""
    Write-Host "üí° Poss√≠veis solu√ß√µes:" -ForegroundColor Yellow
    Write-Host "1. Verifique se o reposit√≥rio existe no GitHub" -ForegroundColor White
    Write-Host "2. Verifique suas credenciais do GitHub" -ForegroundColor White
    Write-Host "3. Execute: git push -u origin main" -ForegroundColor White
}

Write-Host ""
Write-Host "üéâ Processo conclu√≠do!" -ForegroundColor Green
Write-Host "üìö Consulte o arquivo GUIA_GITHUB.md para mais informa√ß√µes." -ForegroundColor Blue
